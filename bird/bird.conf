# DN42 Bird2 Configuration for AS4242420257
# Router: nephthys
# Based on https://dn42.dev/howto/Bird2 (IPv6-only)

####################
# Time Formats
####################

timeformat base iso long;
timeformat log iso long;
timeformat protocol iso long;
timeformat route iso long;

####################
# Variables
####################

# Your AS number
define OWNAS = 4242420257;
define OWNIPv4 = 172.20.13.1;
define OWNIPv6 = fd30:366:4000::1;

define OWNNETv4 = 172.20.13.0/27;
define OWNNETSETv4 = [172.20.13.0/27+];

# Your IPv6 network
define OWNNETv6 = fd30:366:4000::/48;
define OWNNETSETv6 = [fd30:366:4000::/48+];


################################################
#                 Header end                   #
################################################

router id OWNIPv4;

protocol device {
    scan time 10;
}

/*
 *  Utility functions
 */

function is_self_net_v4() -> bool {
  return net ~ OWNNETSETv4;
}

function is_self_net_v6() -> bool {
  return net ~ OWNNETSETv6;
}

function is_valid_network_v4() -> bool {
  return net ~ [
    172.20.0.0/14{21,29}, # dn42
    172.20.0.0/24{28,32}, # dn42 Anycast
    172.21.0.0/24{28,32}, # dn42 Anycast
    172.22.0.0/24{28,32}, # dn42 Anycast
    172.23.0.0/24{28,32}, # dn42 Anycast
    172.31.0.0/16+,       # ChaosVPN
    10.100.0.0/14+,       # ChaosVPN
    10.127.0.0/16+,       # neonetwork
    10.0.0.0/8{15,24}     # Freifunk.net
  ];
}

function is_valid_network_v6() -> bool {
  return net ~ [
    fd00::/8{44,64} # ULA address space as per RFC 4193
  ];
}

roa4 table dn42_roa;
roa6 table dn42_roa_v6;

protocol static {
    roa4 { table dn42_roa; };
    include "/etc/bird/roa_dn42.conf";
};

protocol static {
    roa6 { table dn42_roa_v6; };
    include "/etc/bird/roa_dn42_v6.conf";
};

protocol kernel {
    scan time 20;

    ipv4 {
        import none;
        export filter {
            if source = RTS_STATIC then reject;
            krt_prefsrc = OWNIPv4;
            accept;
        };
    };
}

protocol kernel {
    scan time 20;

    ipv6 {
        import none;
        export filter {
            if source = RTS_STATIC then reject;
            krt_prefsrc = OWNIPv6;
            accept;
        };
    };
};

protocol static {
    route OWNNETv4 reject;

    ipv4 {
        import all;
        export none;
    };
}

protocol static {
    route OWNNETv6 reject;

    ipv6 {
        import all;
        export none;
    };
}

protocol bfd {};

template bgp dnpeers {
    local as OWNAS;
    path metric 1;

    ipv4 {
        import filter {
          if is_valid_network_v4() && !is_self_net_v4() then {
            if (roa_check(dn42_roa, net, bgp_path.last) != ROA_VALID) then {
              print "[dn42] ROA check failed for ", net, " ASN ", bgp_path.last;
              reject;
            } else accept;
          } else reject;
        };
        export filter { if is_valid_network_v4() && source ~ [RTS_STATIC, RTS_BGP] then accept; else reject; };
        import limit 9000 action block;
    };

    ipv6 {
        import filter {
          if is_valid_network_v6() && !is_self_net_v6() then {
            if (roa_check(dn42_roa_v6, net, bgp_path.last) != ROA_VALID) then {
              print "[dn42] ROA check failed for ", net, " ASN ", bgp_path.last;
              reject;
            } else accept;
          } else reject;
        };
        export filter { if is_valid_network_v6() && source ~ [RTS_STATIC, RTS_BGP] then accept; else reject; };
        import limit 9000 action block;
    };
}


# Include peer configurations
include "/etc/bird/peers/*";
